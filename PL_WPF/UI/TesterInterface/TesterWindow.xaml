<!--Bs"d-->

<Window x:Class="PL_WPF.UI.TesterInterface.TesterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL_WPF.UI.TesterInterface"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen" Title="TesterWindow" Height="660" Width="1200">

    <Window.Resources>
        <Style x:Key="Tab_Style" TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="TextBlock.FontSize" Value="18"/>
            <Setter Property="BorderBrush" Value="Beige"/>
            <Setter Property="Height" Value="{Binding ActualHeight, ElementName=MenuGrid_Row1}"/>
            <Setter Property="Width" Value="{Binding Width, ElementName=MenuGrid}"/>
            <Setter Property="Margin" Value="-6,0,0,0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="TextBlock.Foreground" Value="Black"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="False"/>
                        <Condition Property="IsMouseOver" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="TextBlock.Foreground" Value="Beige"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="False"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="TextBlock.Foreground" Value="Gray"/>
                    <Setter Property="Background" Value="LightSkyBlue"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ComboBox_Style" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="TextBlock.FontSize" Value="18"/>
            <Setter Property="TextBlock.Foreground" Value="Black"/>
        </Style>

        <Style x:Key="Lable_Style" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="TextBlock.FontSize" Value="18"/>
            <Setter Property="TextBlock.Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <Style x:Key="DatePicker_Style" TargetType="{x:Type DatePicker}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="TextBlock.Foreground" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="DataGridTextColumnHeader_Style" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="FontSize" Value="36"/>
        </Style>
    </Window.Resources>

    <Grid x:Name="MainGrid">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="12.5*"/>
            <ColumnDefinition Width="87.5*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="15.6*"/>
            <RowDefinition Height="84.6*" x:Name="TabControlRow"/>
        </Grid.RowDefinitions>

        <Label x:Name="MainGrid_Col1" Grid.Column="1"/>
        <!--<Grid x:Name="AB" Height="125" Background="Orange" Width="125" Grid.Column="1" Margin="111,246.2,633.6,110.4" Grid.Row="1"/>
        <Rectangle x:Name="aba" Fill="DeepPink" HorizontalAlignment="Left" Height="60" Margin="5,181.2,-5.4,0" Grid.Row="1" VerticalAlignment="Top" Width="{Binding ElementName=MainGrid, Path=Width,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"/>-->
        <!--not neccary-->
        <Label x:Name="MainGrid_Row1" Grid.Row="1"/>

        <Grid x:Name="MenuGrid" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
            <Grid.Effect>
                <DropShadowEffect/>
            </Grid.Effect>

            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding ActualHeight, ElementName=RectangleTop}"/>
                <RowDefinition Height="9.4*"/>
                <RowDefinition Height="72.5*"/>
            </Grid.RowDefinitions>

            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Black"/>
                    <GradientStop Color="#FF484545" Offset="0.86"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Label x:Name="MenuGrid_Row1" Grid.Row="1"/>
            <Image Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Source="/Accessories/Images/profile.png"/>
        </Grid>

        <Rectangle x:Name="RectangleTop" Grid.Row="0" Grid.Column="1" >
            <Rectangle.Effect>
                <DropShadowEffect/>
            </Rectangle.Effect>
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="#FF7F7676" Offset="1"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label x:Name="headlineLable" Grid.Row="0" Grid.Column="1" Content="{Binding SelectedItem.Header, ElementName=menuTabControl}" FontSize="37" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Beige" FontFamily="Microsoft YaHei UI"/>
        <TabControl x:Name="menuTabControl" Grid.Row="1"  Grid.Column="0" BorderBrush="{x:Null}" TabStripPlacement="left" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{x:Null}" Grid.ColumnSpan="2" Width="{Binding Width, ElementName=TheMainGrid}">
            <TabItem Visibility="Hidden" Width="{Binding ActualWidth, ElementName=MenuGrid}" Height="{Binding ActualHeight, ElementName=MenuGrid_Row1}"/>
            <TabItem IsSelected="True" Style="{DynamicResource Tab_Style}" Header="Profile" VerticalAlignment="Top">
                <Grid>
                    <WrapPanel Orientation="Vertical" >
                        <WrapPanel.Resources>
                            <Style x:Name="GridStyle" TargetType="{x:Type Grid}"/>
                        </WrapPanel.Resources>
                        <Grid>
                            <Label Content="Personal details" FontSize="25" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>
                        </Grid>

                        <Label Content="    Name" FontSize="20" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="         Last name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox  x:Name="lastNameTextBox" Grid.Column="1" TextBlock.Foreground="Black"  HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center" Width="120" />
                            <!--Text="{Binding Name.LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"-->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        First name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" VerticalAlignment="Center" Width="120"/>
                            <!--Text="{Binding Name.FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" -->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <xctk:MaskedTextBox Mask="000000000" BeepOnError="True" x:Name="iDTextBox" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding ID, Mode=TwoWay}" VerticalAlignment="Center" Width="120" BorderBrush="{x:Null}" IsEnabled="False"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Gender:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <ComboBox x:Name="genderComboBox" Style="{StaticResource ComboBox_Style}" Grid.Column="1" SelectedItem="{Binding Gender, Mode=TwoWay}" Margin="3" IsEnabled="False"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Birthdate:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <DatePicker x:Name="birthdateDatePicker" Grid.Column="1" HorizontalAlignment="Center" Margin="3" SelectedDate="{Binding Birthdate, Mode=TwoWay}" VerticalAlignment="Center" TextBlock.Foreground="Black" FontSize="16" DisplayDateStart="01/01/1900" IsEnabled="False"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Phone Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="phoneNumberTextBox" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding PhoneNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        </Grid>

                        <Label Content="    Address" FontSize="20" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Street:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="Street" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" VerticalAlignment="Center" Width="120"/>
                            <!-- Text="{Binding Address.Street, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"-->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        House Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="HouseNumber" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3"  VerticalAlignment="Center" Width="120"/>
                            <!--Text="{Binding Address.HouseNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"-->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        City:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="City" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3"  VerticalAlignment="Center" Width="120"/>
                            <!--Text="{Binding Address.City, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"-->
                        </Grid>

                        <Label Content="Work details" FontSize="25" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Years Of Experience:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <xctk:ByteUpDown x:Name="yearsOfExperienceByteUpDown" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding YearsOfExperience, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Minimum="0" Watermark="" UpdateValueOnEnterKey="True"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Vehicle Type Expertise:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <xctk:WatermarkComboBox Watermark="Choose vehicle" x:Name="vehicleTypeExpertiseComboBox" Style="{StaticResource ComboBox_Style}" Grid.Column="1" SelectedItem ="{Binding VehicleTypeExpertise,  Mode=TwoWay}" Margin="3" />
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Max Of Tests Per Week:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <xctk:ByteUpDown x:Name="maxOfTestsPerWeekByteUpDown" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding MaxOfTestsPerWeek, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Minimum="0" Watermark="" UpdateValueOnEnterKey="True"/>
                        </Grid>
                        <Label Content="    Working Hours:" FontSize="20" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>


                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Column="1" Grid.Row="0" Content="Sun" HorizontalContentAlignment="Center"/>
                            <Label Grid.Column="2" Grid.Row="0" Content="Mon" HorizontalContentAlignment="Center"/>
                            <Label Grid.Column="3" Grid.Row="0" Content="Tue" HorizontalContentAlignment="Center"/>
                            <Label Grid.Column="4" Grid.Row="0" Content="Wed" HorizontalContentAlignment="Center"/>
                            <Label Grid.Column="5" Grid.Row="0" Content="Thu" HorizontalContentAlignment="Center"/>
                            
                            <Label Grid.Column="0" Grid.Row="1" Content="09:00"/>
                            <Label Grid.Column="0" Grid.Row="2" Content="10:00"/>
                            <Label Grid.Column="0" Grid.Row="3" Content="11:00"/>
                            <Label Grid.Column="0" Grid.Row="4" Content="12:00"/>
                            <Label Grid.Column="0" Grid.Row="5" Content="13:00"/>
                            <Label Grid.Column="0" Grid.Row="6" Content="14:00"/>
                            <Label Grid.Column="0" Grid.Row="7" Content="15:00"/>
                            
                            <CheckBox x:Name="CheckBox11" Grid.Row="1" Grid.Column="1" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox12" Grid.Row="1" Grid.Column="2" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox13" Grid.Row="1" Grid.Column="3" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox14" Grid.Row="1" Grid.Column="4" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox15" Grid.Row="1" Grid.Column="5" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox21" Grid.Row="2" Grid.Column="1" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox22" Grid.Row="2" Grid.Column="2" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox23" Grid.Row="2" Grid.Column="3" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox24" Grid.Row="2" Grid.Column="4" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox25" Grid.Row="2" Grid.Column="5" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox31" Grid.Row="3" Grid.Column="1" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox32" Grid.Row="3" Grid.Column="2" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox33" Grid.Row="3" Grid.Column="3" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox34" Grid.Row="3" Grid.Column="4" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox35" Grid.Row="3" Grid.Column="5" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox41" Grid.Row="4" Grid.Column="1" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox42" Grid.Row="4" Grid.Column="2" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox43" Grid.Row="4" Grid.Column="3" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox44" Grid.Row="4" Grid.Column="4" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox45" Grid.Row="4" Grid.Column="5" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox51" Grid.Row="5" Grid.Column="1" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox52" Grid.Row="5" Grid.Column="2" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox53" Grid.Row="5" Grid.Column="3" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox54" Grid.Row="5" Grid.Column="4" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox55" Grid.Row="5" Grid.Column="5" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox61" Grid.Row="6" Grid.Column="1" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox62" Grid.Row="6" Grid.Column="2" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox63" Grid.Row="6" Grid.Column="3" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox64" Grid.Row="6" Grid.Column="4" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox65" Grid.Row="6" Grid.Column="5" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox71" Grid.Row="7" Grid.Column="1" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox72" Grid.Row="7" Grid.Column="2" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox73" Grid.Row="7" Grid.Column="3" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox74" Grid.Row="7" Grid.Column="4" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <CheckBox x:Name="CheckBox75" Grid.Row="7" Grid.Column="5" IsChecked="{Binding ElementName=markAllCheckBox, Path=IsChecked, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            
                            <!-- <CheckBox x:Name="markAllCheckBox" Grid.Column="2" Grid.Row="8" Content="Mark all" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
                        </Grid>


                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="         Max Distance From Address" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <xctk:ByteUpDown x:Name="maxDistanceFromAddressByteUpDown" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding MaxDistanceFromAddress, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Minimum="0" Watermark="" UpdateValueOnEnterKey="True"/>
                        </Grid>

                        <Label Content="Account Update" FontSize="25" HorizontalAlignment="Center" Margin="3" VerticalAlignment="Center"/>

                        <Button Content="Update" FontSize="25" Click="UpdateButtonClick" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center"/>

                        <Label Content="Remove Account" FontSize="25" HorizontalAlignment="Center" Margin="3" VerticalAlignment="Center"/>

                        <Button Content="Remove" Background="Red" FontSize="25" Click="RemoveButtonClick" HorizontalAlignment="Center" Height="45" VerticalAlignment="Top" Width="132"/>

                    </WrapPanel>
                </Grid>
            </TabItem>

            <TabItem Style="{DynamicResource Tab_Style}" Header="My Tests">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <WrapPanel Orientation="Vertical" Grid.Column="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Content="Future tests" FontSize="35" Grid.Column="0" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>
                            <Button Content="Refrash" Click="Refrash_Button_Click" Grid.Column="1" Width="100" HorizontalAlignment="Right"/>
                        </Grid>
                        <DataGrid x:Name="FutureTestsDataGrid" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top" AutoGenerateColumns="False" IsReadOnly="True" FontSize="18">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Code" Binding="{Binding Code}"/>
                                <DataGridTextColumn Header="Trainee ID" Binding="{Binding IDTrainee}"/>
                                <DataGridTextColumn Header="Test Date" Binding="{Binding Date}"/>
                                <DataGridTextColumn Header="Departure Address" Binding="{Binding DepartureAddress}"/>
                                <DataGridTextColumn Header="Vehicle" Binding="{Binding Vehicle}" />
                            </DataGrid.Columns>
                        </DataGrid>

                        <Label Content="Tests that are waiting for a grade"  FontSize="35" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center" />
                        <DataGrid x:Name="TestsDataGrid" Grid.Column="1" SelectionChanged="TestsDataGrid_SelectionChanged" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top" AutoGenerateColumns="False" IsReadOnly="True" FontSize="18">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Code" Binding="{Binding Code}"/>
                                <DataGridTextColumn Header="Trainee ID" Binding="{Binding IDTrainee}"/>
                                <DataGridTextColumn Header="Test Date" Binding="{Binding Date}"/>
                                <DataGridTextColumn Header="Departure Address" Binding="{Binding DepartureAddress}"/>
                                <DataGridTextColumn Header="Vehicle" Binding="{Binding Vehicle}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </WrapPanel>

                    <local:Grading x:Name="GradingTest" Grid.Column="1" IsEnabled="False" SendClick="GradingTest_SendClick" />
                </Grid>
            </TabItem>
            <TabItem Style="{DynamicResource Tab_Style}" Header="Grade entry">
                <WrapPanel Orientation="Vertical">
                    <DataGrid x:Name="TestDataGrid" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top" AutoGenerateColumns="False" IsReadOnly="True" FontSize="18" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Code" Binding="{Binding Code}"/>
                            <DataGridTextColumn Header="Trainee ID" Binding="{Binding IDTrainee}"/>
                            <DataGridTextColumn Header="Test Date" Binding="{Binding Date}"/>
                            <DataGridTextColumn Header="Departure Address" Binding="{Binding DepartureAddress}"/>
                            <DataGridTextColumn Header="Vehicle" Binding="{Binding Vehicle}" />
                        </DataGrid.Columns>
                    </DataGrid>

                    <Label Height="25"/>

                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <CheckBox Content="Keep Distance   " FontSize="20"/>
                        <CheckBox Content="Back Parking   " FontSize="20"/>
                        <CheckBox Content="Using View Mirrors   " FontSize="20"/>
                        <CheckBox Content="Signaling   "/>
                        <CheckBox Content="Integration Into Movement   " FontSize="20"/>
                        <CheckBox Content="Obey Park Signs" FontSize="20"/>
                    </WrapPanel>

                </WrapPanel>
            </TabItem>
            <TabItem Style="{DynamicResource Tab_Style}" Header="Setting">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Content="Password update" Grid.Row="0" FontSize="25" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3.4,0,3.2"  VerticalAlignment="Center" Width="213"/>
                    <PasswordBox x:Name="passwordBoxNew" Grid.Row="1" PasswordChar="*" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3"  VerticalAlignment="Center" Width="120"/>
                    <Label Content="        Password:" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                    <PasswordBox x:Name="passwordBoxAuthentication" Grid.Row="2" PasswordChar="*"  Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3"  VerticalAlignment="Center" Width="120"/>
                    <Label Content="        Password verification:" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                    <xctk:SplitButton Grid.Row="3">
                        <xctk:SplitButton.DropDownContent>
                            <xctk:ColorCanvas/>
                        </xctk:SplitButton.DropDownContent>
                    </xctk:SplitButton>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
