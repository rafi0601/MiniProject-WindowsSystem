<!--BS"D-->

<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL_WPF.UI.TraineeInterface"
    xmlns:BE="clr-namespace:BE;assembly=BE"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:PL_WPF="clr-namespace:PL_WPF"
    xmlns:local1="clr-namespace:PL_WPF.UI.TesterInterface" x:Class="PL_WPF.UI.TraineeInterface.TraineeWindow"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen" Title="The Tests System" ResizeMode="CanResizeWithGrip" Width="1000" Height="640" MinWidth="{Binding Width, Mode=OneTime, RelativeSource={RelativeSource Mode=Self}}" MinHeight="{Binding Height, Mode=OneTime, RelativeSource={RelativeSource Mode=Self}}" Icon="/Accessories/Images/logo3.png">
    <!--Description=interface of trainee-->
    <Window.Resources>
        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="FontFamily" Value="Global Sans Serif" />
        </Style>

        <Style x:Key="Tab_Style" TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="TextBlock.FontSize" Value="18"/>
            <Setter Property="BorderBrush" Value="Beige"/>
            <Setter Property="FontFamily" Value="Global Sans Serif" />

            <Setter Property="Height" Value="{Binding ActualHeight, ElementName=MenuGrid_Row1}"/>
            <Setter Property="Width" Value="{Binding Width, ElementName=MenuGrid}"/>
            <Setter Property="Margin" Value="-6,0,0,0"/>
            <!--<Setter Property="TextBlock.Foreground" Value="#FF08FF02"/>-->
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="TextBlock.Foreground" Value="Black"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="False"/>
                        <Condition Property="IsMouseOver" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="TextBlock.Foreground" Value="Beige"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="False"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="TextBlock.Foreground" Value="Gray"/>
                    <Setter Property="Background" Value="LightSkyBlue"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ComboBox_Style" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="TextBlock.FontSize" Value="18"/>
            <Setter Property="TextBlock.Foreground" Value="Black"/>
        </Style>

        <Style x:Key="Lable_Style" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="TextBlock.FontSize" Value="18"/>
            <Setter Property="TextBlock.Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <Style x:Key="DatePicker_Style" TargetType="{x:Type DatePicker}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="TextBlock.Foreground" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>

    <Grid x:Name="MainGrid">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="12.5*"/>
            <ColumnDefinition Width="87.5*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="15.6*"/>
            <RowDefinition Height="84.6*" x:Name="TabControlRow"/>
        </Grid.RowDefinitions>

        <Label x:Name="MainGrid_Col1" Grid.Column="1"/>
        <Label x:Name="MainGrid_Col1Row1" Grid.Column="1" Grid.Row="1"/>
        <!--<Grid x:Name="AB" Height="125" Background="Orange" Width="125" Grid.Column="1" Margin="111,246.2,633.6,110.4" Grid.Row="1"/>
        <Rectangle x:Name="aba" Fill="DeepPink" HorizontalAlignment="Left" Height="60" Margin="5,181.2,-5.4,0" Grid.Row="1" VerticalAlignment="Top" Width="{Binding ElementName=MainGrid, Path=Width,UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"/>-->
        <!--not neccary-->
        <Label x:Name="MainGrid_Row1" Grid.Row="1"/>

        <Grid x:Name="MenuGrid" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
            <Grid.Effect>
                <DropShadowEffect/>
            </Grid.Effect>

            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding ActualHeight, ElementName=RectangleTop}"/>
                <RowDefinition Height="9.4*"/>
                <RowDefinition Height="72.5*"/>
            </Grid.RowDefinitions>

            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Black"/>
                    <GradientStop Color="#FF484545" Offset="0.86"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Label x:Name="MenuGrid_Row1" Grid.Row="1"/>
            <Image Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Source="/Accessories/Images/profile.png"/>
        </Grid>

        <Rectangle x:Name="RectangleTop" Grid.Row="0" Grid.Column="1" >
            <Rectangle.Effect>
                <DropShadowEffect/>
            </Rectangle.Effect>
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="#FF7F7676" Offset="1"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Label x:Name="headlineLable" Grid.Row="0" Grid.Column="1" Content="{Binding SelectedItem.Header, ElementName=menuTabControl}" FontSize="37" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Beige" FontFamily="Global Sans Serif"/>
        <TabControl x:Name="menuTabControl" Grid.Row="1"  Grid.Column="0" BorderBrush="{x:Null}" TabStripPlacement="left" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{x:Null}" Grid.ColumnSpan="2" Width="{Binding Width, ElementName=TheMainGrid}" d:DataContext="{d:DesignInstance Type=BE:Trainee}">
            <TabItem Visibility="Hidden" Width="{Binding ActualWidth, ElementName=MenuGrid}" Height="{Binding ActualHeight, ElementName=MenuGrid_Row1}"/>
            <TabItem IsSelected="True" Style="{DynamicResource Tab_Style}" Header="Profile">
                <!--<Grid Width="{Binding ActualWidth, ElementName=MainGrid_Col1}" Height="{Binding ActualHeight, ElementName=MainGrid_Row1}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Personal details" Grid.Row="0" FontSize="25" Grid.Column="0" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>
                        <Label Content="    Name" Grid.Row="1" FontSize="20" Grid.Column="0" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>
                        <Label Content="        Last name:" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Row="2" Grid.Column="1" TextBlock.Foreground="Black"  HorizontalAlignment="Left" Margin="3" Text="{Binding Name.LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="        First name:" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding Name.FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="        ID:"  Grid.Row="4" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <TextBlock x:Name="iDTextBox" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding ID, Mode=OneWay}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="        Gender:" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <TextBlock x:Name="genderComboBox" Grid.Row="5" Grid.Column="1" Margin="3" Foreground="Black"/>
                        <Label Content="        Birthdate:" Grid.Row="6" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <DatePicker x:Name="birthdateDatePicker" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Center" Margin="3" SelectedDate="{Binding Birthdate, Mode=OneWay}" VerticalAlignment="Center" TextBlock.Foreground="Black" IsEnabled="False"/>
                        <Label Content="        Mobile Number:" Grid.Row="7" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="MobileNumberTextBox" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding MobileNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="    Address" Grid.Row="8" FontSize="20" Grid.Column="0" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>
                        <Label Content="        Street:" Grid.Row="9" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="Street" Grid.Row="9" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding Address.Street, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="        House Number:" Grid.Row="10" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="HouseNumber"  Grid.Row="10" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding Address.HouseNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="        City:" Grid.Row="11" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="City" Grid.Row="11" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding Address.City, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>

                    <Grid Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car details" Grid.Row="0" FontSize="25" Grid.Column="0" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>
                        <Label Content="        Gearbox:" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <ComboBox x:Name="gearboxComboBox" Grid.Row="1" Style="{StaticResource ComboBox_Style}" Grid.Column="1" SelectedItem ="{Binding Gearbox}" Margin="3" />
                        <Label Content="        Vehicle:" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <ComboBox x:Name="vehicleComboBox"  Grid.Row="2" Style="{StaticResource ComboBox_Style}" Grid.Column="1" SelectedItem ="{Binding Vehicle}" Margin="3" />
                        <Label Content="        Number Of Done Lessons:" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <xctk:ByteUpDown x:Name="numberOfDoneLessonsByteUpDown" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding NumberOfDoneLessons, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Minimum="0" Watermark="" UpdateValueOnEnterKey="True"/>
                        <Label Content="        Driving School:" Grid.Row="4" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="drivingSchoolTextBox"  Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding DrivingSchool, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Account Update" Grid.Row="5" FontSize="25" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Margin="3"  VerticalAlignment="Center"/>
                        <Button Content="Update" Grid.Row="6" FontSize="25" Click="UpdateButtonClick" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center"/>
                    </Grid>
                    <Button Content="Remove" Background="Red" FontSize="25" Click="RemoveButtonClick" Grid.Column="1" HorizontalAlignment="Left" Height="45" Margin="137.8,424,0,-41" VerticalAlignment="Top" Width="132"/>
                </Grid>-->
                <Grid>
                    <WrapPanel Orientation="Vertical" >
                        <WrapPanel.Resources>
                            <Style x:Name="GridStyle" TargetType="{x:Type Grid}"/>
                        </WrapPanel.Resources>
                        <Label Content="Personal details" FontSize="25" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>

                        <Label Content="    Name" FontSize="20" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Last name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="lastNameTextBox" Grid.Column="1" TextBlock.Foreground="Black"  HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" Width="120"/>
                            <!--Text="{Binding Name.LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" -->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        First name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" VerticalAlignment="Center" Width="120"/>
                            <!--Text="{Binding Name.FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" -->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        ID:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="iDTextBox" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding ID, Mode=OneWay}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Gender:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18" />
                            <ComboBox x:Name="genderComboBox" Style="{StaticResource ComboBox_Style}" Grid.Column="1" SelectedItem="{Binding Gender, Mode=OneWay}" Margin="3" IsEnabled="False"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Birthdate:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <DatePicker x:Name="birthdateDatePicker" Grid.Column="1" HorizontalAlignment="Center" Margin="3" SelectedDate="{Binding Birthdate, Mode=OneWay}" VerticalAlignment="Center" TextBlock.Foreground="Black" IsEnabled="False"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Mobile Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="MobileNumberTextBox" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding MobileNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        </Grid>

                        <Label Content="    Address" FontSize="20" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Street:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="Street" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding Address.Street}" VerticalAlignment="Center" Width="120"/>
                            <!-- Text="{Binding Address.Street, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"-->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        House Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <!--<TextBox x:Name="HouseNumber" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" VerticalAlignment="Center" Width="120"/>-->
                            <xctk:IntegerUpDown x:Name="HouseNumber" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" VerticalAlignment="Center" Width="120" Minimum="0" Watermark="" UpdateValueOnEnterKey="True"/>
                            <!--Text="{Binding Address.HouseNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" -->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        City:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="City" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" VerticalAlignment="Center" Width="120"/>
                            <!--Text="{Binding Address.City, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" -->
                        </Grid>

                        <Label Content="Car details" FontSize="25" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Gearbox:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <ComboBox x:Name="gearboxComboBox" Style="{StaticResource ComboBox_Style}" Grid.Column="1"  SelectedItem ="{Binding GearboxTypeTraining}" Margin="3" />
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Vehicle:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" VerticalAlignment="Center" FontSize="18"/>
                            <!--<ComboBox x:Name="vehicleComboBox" Style="{StaticResource ComboBox_Style}" Grid.Column="1" SelectedItem ="{Binding VehicleTypeTraining}" Margin="2.8,3,3.4,3" Grid.ColumnSpan="2" />-->
                            <xctk:DropDownButton Content="Choose vehicle"  Grid.Column="1">
                                <xctk:DropDownButton.DropDownContent>
                                    <ListBox x:Name="vehicleListBox" SelectionMode="Single" Margin="3" Width="150" HorizontalAlignment="Left"/>
                                </xctk:DropDownButton.DropDownContent>
                            </xctk:DropDownButton>
                            <!--<xctk:CheckComboBox Grid.Column="1" x:Name="vehicleCheckListBox"/>-->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Number Of Done Lessons:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <xctk:ByteUpDown x:Name="numberOfDoneLessonsByteUpDown" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding NumberOfDoneLessons, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Minimum="0" Watermark="" UpdateValueOnEnterKey="True"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Driving School:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="drivingSchoolTextBox" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" Text="{Binding DrivingSchool, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        </Grid>
                        <Label Content="    Teacher Name" FontSize="20" HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        Last name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="TeacherLastNameTextBox" Grid.Column="1" TextBlock.Foreground="Black"  HorizontalAlignment="Left" Margin="3"  VerticalAlignment="Center" Width="120"/>
                            <!--Text="{Binding Name.LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"-->
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="        First name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center" FontSize="18"/>
                            <TextBox x:Name="TeacherFirstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" TextBlock.Foreground="Black" Margin="3" VerticalAlignment="Center" Width="120"/>
                            <!--Text="{Binding Name.FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" -->
                        </Grid>

                        <Label Content="Account Update" FontSize="25" HorizontalAlignment="Center" Margin="3" VerticalAlignment="Center"/>

                        <Button Content="Update" FontSize="25" Click="UpdateButtonClick" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center"/>

                        <Label Content="Remove Account" FontSize="25" HorizontalAlignment="Center" Margin="3" VerticalAlignment="Center"/>

                        <Button Content="Remove" Background="Red" FontSize="25" Click="RemoveButtonClick" HorizontalAlignment="Center" Height="45" VerticalAlignment="Top" Width="132"/>

                    </WrapPanel>
                </Grid>
            </TabItem>
            <TabItem Style="{DynamicResource Tab_Style}" Header="Add Test" >

                <!--<TabItem.Header>-->
                <!--<StackPanel Orientation="Horizontal">-->

                <!--<materialDesign:PackIcon Kind="PlusCircle" Height="50" Width="40"/>-->
                <!--<Label Content="Add Test"/>-->
                <!--</StackPanel>-->
                <!--</TabItem.Header>-->
                <WrapPanel Orientation="Vertical" Height="{Binding ElementName=MainGrid_Col1Row1 , Path=ActualHeight}" Width="{Binding ElementName=MainGrid_Col1Row1 , Path=ActualWidth}" >
                    <Label x:Name="ChooseLabel" FontSize="25" Margin="160,0,0,0">Choose a date that's convenient for you</Label>
                    <xctk:BusyIndicator Margin="0,0,-150,0" x:Name="busyIndicator" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Height="60" IsBusy="True" BusyContent="Please wait when we check your date"/>
                    <PL_WPF:DateTimePicker x:Name="dateTimePicker" HorizontalAlignment="Center" Margin="160,0,0,0" VerticalAlignment="Center" SelectionChanged="DateTimePicker_SelectionChanged" />
                    <Label Height="15"/>
                    <Button x:Name="CheckDateButton" Content="Check Date" FontSize="20" Width="150" Margin="160,0,0,0" IsEnabled="False" Click="CheckDateButton_Click"/>
                    <local:DetailsAboutMyTest x:Name="DetailsOfMyTest" Visibility="Collapsed" RefrashButtonClick="DetailsOfMyTest_RefrashButtonClick" Margin="160,0,0,0"/>
                    <local:SuggestAlternateDate x:Name="SuggestAlternateDateOfTest" Visibility="Collapsed" AcceptClick="SuggestAlternateDateOfTest_AcceptClick" CancelClick="SuggestAlternateDateOfTest_CancelClick"/>
                    <!--<WindowsFormHost/>-->
                    <!--<xctk:DateTimePicker x:Name="addTestDateTimePicker" TimePickerAllowSpin="False" TimePickerShowButtonSpinner="False" AutoCloseCalendar="False" ValueChanged="DateTimePicker_ValueChanged" ShowButtonSpinner="False"  IsOpen="True" AllowTextInput="False" Height="103" Width="730"/>-->


                </WrapPanel>
                <!--<xctk:DateTimePicker TimePickerAllowSpin="False" AllowSpin="False" TimePickerShowButtonSpinner="False" ShowButtonSpinner="False" UpdateValueOnEnterKey="True" Format="FullDateTime"/>-->
                <!--BUG minimun={Today}-->

            </TabItem>
            <TabItem Style="{DynamicResource Tab_Style}" Header="My Tests">
                <WrapPanel Orientation="Vertical" Margin="160,0,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Content="The Test Details:" FontSize="25" Grid.Column="0" RenderTransformOrigin="0.32,0.273"/>

                        <Button RenderTransformOrigin="0.5,0.5" Name="Refresh_Button" Grid.Column="1" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}" Click="Refrash_Button_Click" Height="Auto" Width="Auto" HorizontalAlignment="Center">
                            <Button.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Button.RenderTransform>
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Refresh_Button" Duration="0:0:0.300" Storyboard.TargetProperty="RenderTransform.Angle" By="90" To="180" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Refresh_Button" Duration="0:0:0.600" Storyboard.TargetProperty="RenderTransform.Angle" To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                            <materialDesign:PackIcon Name="Refresh_Icon" Kind="Refresh" Foreground="#FF2196F3" Width="40" Height="40"/>
                        </Button>

                    </Grid>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <DataGrid x:Name="DadaGridOfDoneTests" Grid.Column="0" HorizontalAlignment="Left" AutoGenerateColumns="False" IsReadOnly="True" FontSize="18" SelectionChanged="DadaGridOfDoneTests_SelectionChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Test Date" Binding="{Binding Date}"/>
                                <DataGridTextColumn Header="Departure Address" Binding="{Binding DepartureAddress}"/>
                                <DataGridTextColumn Header="Vehicle" Binding="{Binding Vehicle}" />
                            </DataGrid.Columns>
                        </DataGrid>
                        <!--<CheckBox x:Name="IsPassCheckBox" Content="Is Pass" Grid.Column="1"/>-->
                        <local1:Grading x:Name="Grading" Grid.Column="1" IsEnabled="False"/>
                    </Grid>

                </WrapPanel>
                <!--<StackPanel>FFoFF
                    <Button x:Name="asdf"/>
                    <CheckBox IsChecked="{Binding ElementName=asdf, Path=IsMouseCaptured, Mode=OneWay}"/>
                </StackPanel>-->
                <!--<WrapPanel>
                    <WrapPanel.Resources>
                      <Style x:Key="GridStyle" TargetType="Grid">
                      </Style>

                      <Grid x:Key="abc">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </WrapPanel.Resources>

                    <Grid colu/>
                </WrapPanel>-->
            </TabItem>
            <TabItem Style="{DynamicResource Tab_Style}" Header="Setting">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Content="Password update" Grid.Row="0" FontSize="25" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3.4,0,3.2"  VerticalAlignment="Center" Width="213"/>
                    <PasswordBox x:Name="passwordBoxNew" Grid.Row="1" PasswordChar="*" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3"  VerticalAlignment="Center" Width="120"/>
                    <Label Content="        Password:" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                    <PasswordBox x:Name="passwordBoxAuthentication" Grid.Row="2" PasswordChar="*"  Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3"  VerticalAlignment="Center" Width="120"/>
                    <Label Content="        Password verification:" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Center"/>
                    <Button Content="Update" FontSize="25" Click="UpdatePasswordButtonClick" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center" Grid.Row="3"/>
                    <!--<xctk:SplitButton Grid.Row="4">
                        <xctk:SplitButton.DropDownContent>
                            <xctk:ColorCanvas/>
                        </xctk:SplitButton.DropDownContent>
                    </xctk:SplitButton>-->
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>

<!--<Button Content="Button" Grid.Column="1" HorizontalAlignment="Left" Height="100" Margin="174.8,143,0,0" VerticalAlignment="Top" Width="185" Click="Button"/>-->